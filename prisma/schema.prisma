// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("LEETPAL_DATABASE_URL")
}

model Problem {
  id      Int      @id @default(autoincrement())
  title   String
  solved  Boolean? @default(false)

  // To return `Date`s intact through the API we need to add data transformers
  // https://trpc.io/docs/data-transformers
  createdAt DateTime @unique @default(now())
  updatedAt DateTime @unique @default(now())
}

model Session {
  id           String   @id @default(cuid())
  createdAt    DateTime @unique @default(now())
  updatedAt    DateTime @unique @default(now())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  createdAt     DateTime  @unique @default(now())
  updatedAt     DateTime  @unique @default(now())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
//  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  createdAt  DateTime @unique @default(now())
  updatedAt  DateTime @unique @default(now())
  identifier String
  token      String   @unique
  expires    DateTime
  @@unique([identifier, token])
}
